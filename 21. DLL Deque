/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication21_2;

import java.util.Random;

/**
 *
 * @author user
 */
class DoublyLinkedList {

    class Node {

        int data;
        Node next;
        Node prev;
    }
    private Node head;
    private Node tail;
    private int count;

    public int getCount() {
        return count;
    }

    public void clear() {
        head = tail = null;
        count = 0;
    }

    public boolean isEmpty() {
        return head == null;
    }

    public void addTail(int data) {
        Node temp = new Node();
        temp.data = data;
        temp.prev = tail;
        if (isEmpty()) {
            head = temp;
        } else {
            tail.next = temp;
        }
        tail = temp;
        count++;
    }

    public void addHead(int data) {
        Node temp = new Node();
        temp.data = data;
        temp.next = head;
        if (isEmpty()) {
            tail = temp;
        } else {
            head.prev = temp;
        }
        head = temp;
        count++;
    }

    public int delTail() {
        if (isEmpty()) {
            return -1;
        }
        int data = tail.data;
        tail = tail.prev;
        if (tail == null) {
            head = null;
        } else {
            tail.next = null;
        }
        count--;
        return data;
    }

    public int delHead() {
        if (isEmpty()) {
            return -1;
        }
        int data = head.data;
        head = head.next;
        if (head == null) {
            tail = null;
        } else {
            head.prev = null;
        }
        count--;
        return data;
    }

    @Override
    public String toString() {
        if (count == 0) {
            return "empty!";
        }
        StringBuilder result = new StringBuilder();
        Node temp = head;
        while (temp != null) {
            result.append(temp.data + "  ");
            temp = temp.next;
        }
        return result.toString();
    }
}

class Deque {

    private DoublyLinkedList data;

    public Deque() {
        data = new DoublyLinkedList();
    }

    public int getCount() {
        return data.getCount();
    }

    public void clear() {
        data.clear();
    }

    public boolean isEmpty() {
        return data.isEmpty();
    }

    public void pushBack(int value) {
        data.addTail(value);
    }

    public void pushFront(int value) {
        data.addHead(value);
    }

    public int popBack() {
        return data.delTail();
    }

    public int popFront() {
        return data.delHead();
    }

    public void print() {
        System.out.println("==================================");
        System.out.print(data.toString());
        System.out.println("\n==================================");
    }
}

public class JavaApplication21_2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Random r = new Random();
        Deque d = new Deque();

        for (int i = 0; i < 7; i++) {
            d.pushBack(r.nextInt(500));
        }
        d.print();

        for (int i = 0; i < 5; i++) {
            d.pushFront(r.nextInt(500));
        }
        d.print();

        for (int i = 0; i < 3; i++) {
            d.popBack();
        }
        d.print();

        for (int i = 0; i < 3; i++) {
            d.popFront();
        }
        d.print();
    }

}

run:
==================================
208  161  321  129  273  111  293  
==================================
==================================
23  336  243  456  427  208  161  321  129  273  111  293  
==================================
==================================
23  336  243  456  427  208  161  321  129  
==================================
==================================
456  427  208  161  321  129  
==================================
СБОРКА УСПЕШНО ЗАВЕРШЕНА (общее время: 0 секунд)
