/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafxapplication24_4;

import java.util.Random;
import javafx.application.Application;
import static javafx.application.Application.launch;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.input.KeyEvent;
import javafx.scene.paint.Color;
import javafx.scene.shape.*;
import javafx.stage.Stage;

/**
 *
 * @author Oyla
 */
class MyPoint {

    private double x;
    private double y;

    MyPoint() {
        this(0, 0);
    }

    MyPoint(double x, double y) {
        setX(x);
        setY(y);
    }

    /**
     * @return the x
     */
    public double getX() {
        return x;
    }

    /**
     * @return the y
     */
    public double getY() {
        return y;
    }

    /**
     * @param x the x to set
     */
    public void setX(double x) {
        this.x = x;
    }

    /**
     * @param y the y to set
     */
    public void setY(double y) {
        this.y = y;
    }

}

class MyPolygon {

    private MyPoint[] myPointsArray;
    private int count = 0;
    private int min = 3;
    private int max = 20;
    private int maxW = 100;
    private int maxH = 100;
    private Random r = new Random();
    private Color color;

    public MyPolygon() {
        this(3, 20, 100, 100);
    }

    public MyPolygon(int min, int max, int maxW, int maxH) {
        setMin(min);
        setMax(max);
        setMaxW(maxW);
        setMaxH(maxH);
        start();
    }

    /**
     * @return the count
     */
    public int getCount() {
        return count;
    }

    /**
     * @return the min
     */
    public int getMin() {
        return min;
    }

    /**
     * @return the max
     */
    public int getMax() {
        return max;
    }

    /**
     * @return the maxH
     */
    public int getMaxH() {
        return maxH;
    }

    /**
     * @return the maxW
     */
    public int getMaxW() {
        return maxW;
    }

    /**
     * @return the c
     */
    public Color getColor() {
        return color;
    }

    /**
     * @param myPointsArray the myPointsArray to set
     */
    public void setMyPointsArray() {
        myPointsArray = new MyPoint[count];
        for (int i = 0; i < count; i++) {
            myPointsArray[i] = new MyPoint(r.nextInt(maxW) + 1, r.nextInt(maxH) + 1);
        }
    }

    /**
     * @param count the count to set
     */
    public void setCount() {
        count = r.nextInt(max - min + 1) + min;
    }

    /**
     * @param min the min to set
     */
    public void setMin(int min) {
        this.min = min;
    }

    /**
     * @param max the max to set
     */
    public void setMax(int max) {
        this.max = max;
    }

    /**
     * @param minW the minW to set
     */
    public void setMaxH(int maxH) {
        this.maxH = maxH;
    }

    /**
     * @param maxW the maxW to set
     */
    public void setMaxW(int maxW) {
        this.maxW = maxW;
    }

    /**
     * @param c the c to set
     */
    public void setColor() {
        color = new Color(r.nextInt(11) * 0.1, r.nextInt(11) * 0.1, r.nextInt(11) * 0.1, 1.0);
    }

    public boolean isEmpty() {
        return count == 0;
    }

    /**
     * @return the points
     */
    public double[] getPoints() {
        int myPointsLength = myPointsArray.length;
        double[] points = new double[myPointsLength * 2];
        int y;
        for (int i = 0; i < myPointsLength; i++) {
            y = i * 2;
            points[y] = myPointsArray[i].getX();
            points[y + 1] = myPointsArray[i].getY();
        }
        return points;
    }

    public void draw() {
        if (!isEmpty()) {
            Polygon myPolygon = new Polygon(getPoints());
            myPolygon.setStroke(color);
            myPolygon.setFill(null);
            JavaFXApplication24_4.root.getChildren().add(myPolygon);
        }
    }

    public void start() {
        setCount();
        setMyPointsArray();
        setColor();
        draw();
    }

}

public class JavaFXApplication24_4 extends Application {

    public static final Group root = new Group();
    public static final Canvas canvas = new Canvas(360, 370);
    public static final GraphicsContext gc = canvas.getGraphicsContext2D();

    @Override
    public void start(Stage primaryStage) {
        MyPolygon myPolygon = new MyPolygon(3, 20, 360, 370);

        root.getChildren().add(canvas);
        Scene scene = new Scene(root);
        primaryStage.setScene(scene);
        primaryStage.show();

        scene.setOnKeyPressed((KeyEvent t) -> {
            myPolygon.start();
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }

}
